# SPDX-FileCopyrightText: 2024 University of Manchester
#
# SPDX-License-Identifier: apache-2.0

name: Add License and Copyright Headers
on:
  pull_request

jobs:
  add-headers:
    permissions:
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: repo

      - name: Extract branch name
        id: branch_name
        shell: bash
        run: echo "ORIG_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - name: Move actions out of way
        shell: bash
        run: |
          [ ! -d repo/.github ] || mv repo/.github .

      - name: List files
        shell: bash
        run: |
          ls -la repo

      - name: Add Headers
        uses: fsfe/reuse-action@v3
        with:
          args: annotate --fallback-dot-license --merge-copyrights --copyright "University of Manchester" --license "apache-2.0" --recursive /github/workspace/repo

      - name: Put actions back if they exist
        shell: bash
        run: |
          [ ! -d .github ] || mv .github repo

      - name: Check if changed
        id: check_changed
        shell: bash
        working-directory: repo
        run: |
          set +e
          git diff --quiet
          CHANGED_FILES=$?
          NEW_FILES=$(git ls-files . --exclude-standard --others | wc -l)
          if [ $CHANGED_FILES -eq 1 ] || [ $NEW_FILES -ne 0 ]; then
              echo "CHANGED=1" >> $GITHUB_OUTPUT
          else
              echo "CHANGED=0" >> $GITHUB_OUTPUT
          fi

      - name: Set current date as env variable
        run: echo "NOW=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV

      - name: Delete existing fix-headers branches
        uses: phpdocker-io/github-actions-delete-abandoned-branches@v2
        with:
          github_token: ${{ github.token }}
          last_commit_age_days: -1
          allowed_prefixes: add-license-headers-to-${{ steps.branch_name.outputs.ORIG_BRANCH }}-
          dry_run: no

      - name: Create branch
        if: steps.check_changed.outputs.CHANGED == 1
        id: branch_creation
        shell: bash
        working-directory: repo
        env:
            GH_TOKEN: ${{ github.token }}
        run: |
            git config --global user.email "no-reply@github.com"
            git config --global user.name "GitHub Actions"
            git checkout -b add-license-headers-to-${{ steps.branch_name.outputs.ORIG_BRANCH }}-${{ env.NOW }}
            git add -A
            git commit -a -m "Add License and Copyright Headers"
            git push origin add-license-headers-to-${{ steps.branch_name.outputs.ORIG_BRANCH }}-${{ env.NOW }}
            echo "MSG=Copyright updates at ${{ github.server_url }}/${{ github.repository }}/compare/${{ steps.branch_name.outputs.ORIG_BRANCH }}...add-license-headers-to-${{ steps.branch_name.outputs.ORIG_BRANCH }}-${{ env.NOW }}?expand=1, please review and merge." >> $GITHUB_OUTPUT

      - name: Commit comment if had to create new branch
        if: steps.check_changed.outputs.CHANGED == 1
        uses: peter-evans/commit-comment@v3
        with:
          body: |
            ${{ steps.branch_creation.outputs.MSG }}

      - name: Fail if had to create new branch
        if: steps.check_changed.outputs.CHANGED == 1
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed("${{ steps.branch_creation.outputs.MSG }}")
